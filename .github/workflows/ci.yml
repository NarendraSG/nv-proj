      - name: Analyze changes
        run: |
          echo "Processing changed files:"
          for file in $changed_files; do
            echo "File: $file"
            
            changed_lines=$(git diff -U0 origin/${{ github.base_ref }}...HEAD -- $file | \
                            grep -Po '^@@ -\d+,?\d* \+(\d+),?(\d*) @@' | \
                            awk '{print $2}' | sed 's/+/ /g')

            declare -a groups=()
            start=-1
            end=-1

            for line in $changed_lines; do
              if [[ $line =~ ^[0-9]+$ ]]; then  # Ensure it's a positive integer
                if [[ $start -eq -1 ]]; then
                  start=$line
                  end=$line
                elif [[ $line -eq $((end+1)) ]]; then
                  end=$line
                else
                  groups+=( "$start,$end" )
                  start=$line
                  end=$line
                fi
              fi
            done

            if [[ $start -ne -1 ]]; then
              groups+=( "$start,$end" )
            fi

            for group in "${groups[@]}"; do
              if [[ $group =~ ^[0-9]+,[0-9]+$ ]]; then  # Validate before using
                echo "Analyzing history for lines: $group in $file"
                commit_history=$(git log -p -L $group:$file || echo "Error processing $file:$group")
                
                pr_commits=$(git log --pretty=format:"%H" origin/${{ github.base_ref }}...HEAD)

                while read -r commit; do
                  if [[ ! " $pr_commits " =~ " $commit " ]] && ! git show --quiet --format=%P $commit | grep -q " "; then
                    commit_time=$(git show -s --format=%ct $commit)
                    pr_creation_time=$(date -d "${{ github.event.pull_request.created_at }}" +%s)
                    duration=$((pr_creation_time - commit_time))
                    echo "File: $file, Lines: $group, Commit: $commit, Duration: $duration seconds"
                  fi
                done <<< "$commit_history"
              else
                echo "Skipping invalid line range: $group"
              fi
            done
          done
